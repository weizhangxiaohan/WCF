//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarApplication.CarReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/CarManagementInterface")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CarApplication.CarReference.LuxuryItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CarApplication.CarReference.SportCars))]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LitersOfLuggageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxNumberOfPersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDoorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CarApplication.CarReference.TransmissionTypeEnum TransmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LitersOfLuggage {
            get {
                return this.LitersOfLuggageField;
            }
            set {
                if ((this.LitersOfLuggageField.Equals(value) != true)) {
                    this.LitersOfLuggageField = value;
                    this.RaisePropertyChanged("LitersOfLuggage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxNumberOfPersons {
            get {
                return this.MaxNumberOfPersonsField;
            }
            set {
                if ((this.MaxNumberOfPersonsField.Equals(value) != true)) {
                    this.MaxNumberOfPersonsField = value;
                    this.RaisePropertyChanged("MaxNumberOfPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDoors {
            get {
                return this.NumberOfDoorsField;
            }
            set {
                if ((this.NumberOfDoorsField.Equals(value) != true)) {
                    this.NumberOfDoorsField = value;
                    this.RaisePropertyChanged("NumberOfDoors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CarApplication.CarReference.TransmissionTypeEnum Transmission {
            get {
                return this.TransmissionField;
            }
            set {
                if ((this.TransmissionField.Equals(value) != true)) {
                    this.TransmissionField = value;
                    this.RaisePropertyChanged("Transmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LuxuryItems", Namespace="http://schemas.datacontract.org/2004/07/CarManagementInterface")]
    [System.SerializableAttribute()]
    public partial class LuxuryItems : CarApplication.CarReference.Car {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SportCars", Namespace="http://schemas.datacontract.org/2004/07/CarManagementInterface")]
    [System.SerializableAttribute()]
    public partial class SportCars : CarApplication.CarReference.Car {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HorsePowerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HorsePower {
            get {
                return this.HorsePowerField;
            }
            set {
                if ((this.HorsePowerField.Equals(value) != true)) {
                    this.HorsePowerField = value;
                    this.RaisePropertyChanged("HorsePower");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransmissionTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/CarManagementInterface")]
    public enum TransmissionTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Automatic = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarReference.ICarManagement")]
    public interface ICarManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/InsertNewCar", ReplyAction="http://tempuri.org/ICarManagement/InsertNewCarResponse")]
        int InsertNewCar(CarApplication.CarReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/InsertNewCar", ReplyAction="http://tempuri.org/ICarManagement/InsertNewCarResponse")]
        System.Threading.Tasks.Task<int> InsertNewCarAsync(CarApplication.CarReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/RemoveCar", ReplyAction="http://tempuri.org/ICarManagement/RemoveCarResponse")]
        bool RemoveCar(CarApplication.CarReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/RemoveCar", ReplyAction="http://tempuri.org/ICarManagement/RemoveCarResponse")]
        System.Threading.Tasks.Task<bool> RemoveCarAsync(CarApplication.CarReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/UpdateMileage", ReplyAction="http://tempuri.org/ICarManagement/UpdateMileageResponse")]
        void UpdateMileage(CarApplication.CarReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/UpdateMileage", ReplyAction="http://tempuri.org/ICarManagement/UpdateMileageResponse")]
        System.Threading.Tasks.Task UpdateMileageAsync(CarApplication.CarReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/ListCars", ReplyAction="http://tempuri.org/ICarManagement/ListCarsResponse")]
        System.Collections.Generic.LinkedList<CarApplication.CarReference.Car> ListCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/ListCars", ReplyAction="http://tempuri.org/ICarManagement/ListCarsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.LinkedList<CarApplication.CarReference.Car>> ListCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/GetCarPicture", ReplyAction="http://tempuri.org/ICarManagement/GetCarPictureResponse")]
        byte[] GetCarPicture(string carID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarManagement/GetCarPicture", ReplyAction="http://tempuri.org/ICarManagement/GetCarPictureResponse")]
        System.Threading.Tasks.Task<byte[]> GetCarPictureAsync(string carID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarManagementChannel : CarApplication.CarReference.ICarManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarManagementClient : System.ServiceModel.ClientBase<CarApplication.CarReference.ICarManagement>, CarApplication.CarReference.ICarManagement {
        
        public CarManagementClient() {
        }
        
        public CarManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertNewCar(CarApplication.CarReference.Car car) {
            return base.Channel.InsertNewCar(car);
        }
        
        public System.Threading.Tasks.Task<int> InsertNewCarAsync(CarApplication.CarReference.Car car) {
            return base.Channel.InsertNewCarAsync(car);
        }
        
        public bool RemoveCar(CarApplication.CarReference.Car car) {
            return base.Channel.RemoveCar(car);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveCarAsync(CarApplication.CarReference.Car car) {
            return base.Channel.RemoveCarAsync(car);
        }
        
        public void UpdateMileage(CarApplication.CarReference.Car car) {
            base.Channel.UpdateMileage(car);
        }
        
        public System.Threading.Tasks.Task UpdateMileageAsync(CarApplication.CarReference.Car car) {
            return base.Channel.UpdateMileageAsync(car);
        }
        
        public System.Collections.Generic.LinkedList<CarApplication.CarReference.Car> ListCars() {
            return base.Channel.ListCars();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.LinkedList<CarApplication.CarReference.Car>> ListCarsAsync() {
            return base.Channel.ListCarsAsync();
        }
        
        public byte[] GetCarPicture(string carID) {
            return base.Channel.GetCarPicture(carID);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetCarPictureAsync(string carID) {
            return base.Channel.GetCarPictureAsync(carID);
        }
    }
}
